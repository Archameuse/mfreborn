import Head from "next/head";
import Link from "next/link";
import Image from 'next/image'
import { ReactNode, useEffect, useRef } from "react";
import gsap from "gsap";
import { useRouter } from "next/router";

type Position = 'relative' | 'fixed' | 'absolute'; 

type Props = {
    children: ReactNode;
    title?: string;
    position?: Position;
}

type ButtonProps = {
    children: ReactNode;
    href: string;
}

type HeaderProps = {
    position: Position;
}

const Layout = ({
    children,
    title = 'TEST EXAMPLE',
    position = 'relative'
} : Props) => (
    <>
    <Head>
        <title>{title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
    </Head>
    <HeaderLocal position={position}/>
        {children}
        {/*< div style={{backgroundColor: 'black', width: '100vw', height: '50px'}} /> */}
    </>
)


const HeaderLocal = ({position}: HeaderProps) => {
    let bg: string = 'none'
    if (position === 'relative') bg = 'linear-gradient(180deg, rgba(152,206,159,1) 0%, rgb(141, 182, 123) 100%)'
    return(
    <header className='header-main' style={{position: position, background: bg}}>
        <div className="header-left">
            <div className="header-logo">
                {/* <Link href='/'> */}
                    <Image src='/mflogosquare.png' layout="fill" objectFit="cover"/>
                {/* </Link> */}
            </div>
            <div className="header-heroes">
                <Button href='/heroes'>герои</Button>
            </div>
            <div className="header-patches">
                <Button href='/patches'>патчи</Button>
            </div>
            <div className="header-statistics">
                <Button href='/statistics'>статистика</Button>
            </div>
        </div>
        <div className="header-right">
            <div className="header-login"><Button href='/login'>войти</Button></div>
            <div className="header-language"><Button href='/language'>язык</Button></div>
        </div>
    </header>
)}


const Button = ({
    children,
    href,
}: ButtonProps) => {
    const butRef = useRef<any>()
    const gsapRef = useRef<any>()
    const router = useRouter()
    const selected: boolean = router.asPath === href
    useEffect(() => {
    let ctx = gsap.context(() => {
        gsapRef.current = gsap.to(butRef.current, {opacity: 1, paused:true, duration: 0.2})
    })
    return () => ctx.revert()
    }, [])
    
return(
<>
<button ref={butRef} onMouseEnter={() => gsapRef.current.play()} onMouseLeave={() => gsapRef.current.reverse()}>
    <Link href={href}>{children}</Link>
</button>
<style jsx>
{`
button {
    width: 100%;
    height: 100%;
    background-color: transparent;
    border: none;
    cursor: pointer;
    text-transform: uppercase;
    text-shadow: 0 0 2px black;
    opacity: ${selected ? 1 : 0.8};
    border-bottom: ${selected ? 'solid 2px black' : 'none'};
}
`}
</style>
</>
)
}

export default Layout